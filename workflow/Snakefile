# Python standard library
from os.path import join
from os import listdir
import os, sys

# 3rd party imports from pypi
from snakemake.workflow import workflow as wf_api
from snakemake.utils import R

# Local imports
from scripts.common import (
    allocated,
    provided,
    references,
    str_bool
)

configfile: 'config.json'
exposure = config['options']['exposure']
outcome = config['options']['outcome']
workpath = config['project']['workpath']       # Pipeline's output directory
tmpdir = config['options']['tmp_dir']
population = config['options']['pop']
clump = config['options']['clump']
if 'input_qtl' in config['options']:
    input_format = config['options']['input_qtl']
else:
    input_format = None

if 'database' in config['options']:
    database = config['options']['database']
else:
    database = None

if 'outcome_pval_threshold' in config['options']:
    if config['options']['outcome_pval_threshold'] == 'None':
        threshold = None
    else:
        threshold = config['options']['outcome_pval_threshold']
else:
    threshold = None

if 'keyword' in config['options']:
    keyword = config['options']['keyword'] == 'True'
else:
    keyword = False

errorlog = join(workpath, 'pipeline_error.csv')

if not os.path.isfile(errorlog):
    with open(errorlog, 'w') as f:
        f.write('File,Error\n')

# Final ouput files of the pipeline
rule all:
    input:
        join(workpath, "mr", "all_plots.rds")


# Import rules
include: join("rules", "common.smk")
include: join("rules", "mr.smk")
